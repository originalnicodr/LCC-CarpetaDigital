;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-intermediate-reader.ss" "lang")((modname |2)|) (read-case-sensitive #t) (teachpacks ((lib "universe.rkt" "teachpack" "2htdp") (lib "image.rkt" "teachpack" "2htdp"))) (htdp-settings #(#t constructor repeating-decimal #f #t none #f ((lib "universe.rkt" "teachpack" "2htdp") (lib "image.rkt" "teachpack" "2htdp")))))
;filte: List(x) (x->Boolean) -> List (x)
(define (filtro c l) (cond [(empty? l) '()]
                           [(cons? l) (if (c (first l)) (cons (first l) (filtro c (rest l))) (filtro c (rest l)))]))

;13)

;(filtro even? lista de numeros)

(check-expect (filtro even? (list 2 0 3 8 9 5 60)) (list 2 0 8 60))

;14)

(define (5<? x) (if (< 5 (string-length x)) #t #f))
;Representa un string con un string y una afirmacion con un booleano
;5<?: String -> Boolean
;Si el largo de la cadena es mayor a 5 entonces la funcion dara verdadero, si no, es falso

;(filtro 5<? lista de strings)

(check-expect (filtro 5<? (list "holas" "winter is here" "AM" "racket ayudame en algebra")) (list "winter is here" "racket ayudame en algebra"))

;16)

(define MAX 5)

(define (distanciaxy a) (sqrt (+ (sqr (possn-x a)) (sqr (possn-y a)))))

(define-struct possn [x y])
 ; una posición es (make-posn Number Number)
 ; interpretación: un elemento en posn representa una
; posición en coordenadas cartesianas

(define (cercam x) (if (< (distanciaxy x) MAX) #t #f))

;(filtro cercam lista de puntos)

(check-expect (filtro cercam (list (make-possn 3 5) (make-possn 1 2) (make-possn 0 1) (make-possn 5 6))) (list (make-possn 1 2) (make-possn 0 1)))

;17)

(define (positivo x) (if (< 0 x) #t #f))
;Representa un numero con un numero y una afirmacion con un booleano
;positivo: Number -> Boolean
;Analiza si un numero es positivo, de serlo, dara verdadero, caso contrario, falso.

;(filtro positivo lista de numeros) lambda

(check-expect (filtro positivo (list 0 5 8 -4 2 -2)) (list 5 8 2))

